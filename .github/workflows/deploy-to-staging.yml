name: Deploy to staging env
on:
  push:
    branches:
      - staging
  workflow_dispatch: null
jobs:
  do-lint:
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3
      - id: setup-node
        name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0
      - id: manage-npm-cache
        name: Cache/Restore npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      - id: install-dependencies
        name: Install Dependencies
        run: npm ci
      - id: do-lint
        name: Lint
        run: npm run lint
  do-staging-deploy:
    runs-on: ubuntu-latest
    needs: do-lint
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3
      - id: setup-node
        name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.15.0
          cache: 'npm'
      - id: install-npm-dependencies
        name: Install Dependencies
        run: npm ci
      - id: configure-aws-credentials
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - id: do-production-build
        name: Build
        run: npm run build:production
        env:
          SUBDOMAIN: ${{ secrets.SUBDOMAIN_STAGING }}
          DEFAULT_API_KEY: ${{ secrets.API_SERVICE_API_KEY_STAGING }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
      - id: do-staging-deploy
        name: Deploy
        run: npm run deploy:staging
        env:
          SUBDOMAIN: ${{ secrets.SUBDOMAIN_STAGING }}
          DEFAULT_API_KEY: ${{ secrets.API_SERVICE_API_KEY_STAGING }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
